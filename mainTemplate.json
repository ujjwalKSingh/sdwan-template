{
  
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "Virtual_Network",
        "metadata": {
          "description": "VNet name"
        }
      },
      "Location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]"
      },
      "virtualNetworkExistingRGName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Identifies whether to use new or existing Storage Account"
        }
      },
      "virtualNetworkAddressPrefix": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Virtual Network Address prefix"
        }
      },
      "vnetNewOrExisting": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Identifies whether to use new or existing Virtual Network"
        }
      },
      "Subnet1Prefix": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Manangement Subnet Prefix"
        }
      },
      "Subnet1Name": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Management Subnet Name"
        }
      },
      "subnet1StartAddress": {
        "type": "string",
        "metadata": {
          "description": "Manangement Subnet Starting IP Address"
        }
      },
      "Subnet2Prefix": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "LAN Subnet Prefix"
        }
      },
      "Subnet2Name": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "LAN Subnet Name"
        }
      },
      "subnet2StartAddress": {
        "type": "string",
        "metadata": {
          "description": "LAN Subnet Starting IP Address"
        }
      },
      "Subnet3Prefix": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "WAN Subnet Prefix"
        }
      },
      "Subnet3Name": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "WAN Subnet Name"
        }
      },
      "subnet3StartAddress": {
        "type": "string",
        "metadata": {
          "description": "WAN Subnet Starting IP Address"
        }
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
      "vmName": {
        "type": "string",
        "defaultValue": "myappliance",
        "metadata": {
          "description": "Name for the Virtual Machine."
        }
      },
      "newStorageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Unique Name for Storage Account where the Virtual Machine's disks will be placed."
        }
      },
      "storageAccountType": {
        "type": "string",
        "metadata": {
          "description": "The type of storage account created."
        }
      },
      "storageAccountNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ],
        "metadata": {
          "description": "Identifies whether to use new or existing Storage Account"
        }
      },
      "storageAccountExistingRG": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Resource Group containing existing storage account"
        }
      },
      "MgmtpublicIPAddressName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Name of the Managemnet Public IP Address"
        }
      },
      "MgmtpublicIPDnsName": {
        "type": "string",
        "defaultValue": "myappliancedns",
        "metadata": {
          "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
        }
      },
      "MgmtpublicIPNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ],
        "metadata": {
          "description": "Indicates whether the Public IP is new or existing"
        }
      },
      "MgmtpublicIPExistingRGName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Resource Group containing existing public IP"
        }
      },
      "VIPpublicIPAddressName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Name of the Public IP Address"
        }
      },
      "VIPpublicIPDnsName": {
        "type": "string",
        "defaultValue": "myappliancedns",
        "metadata": {
          "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
        }
      },
      "VIPpublicIPNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ],
        "metadata": {
          "description": "Indicates whether the Public IP is new or existing"
        }
      },
      "VIPpublicIPExistingRGName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Resource Group containing existing public IP"
        }
      },
      "baseUrl": {
        "type": "string",
        "metadata": {
          "artifactsBaseUrl": "",
          "description": "URL to acquire other templates"
        },
        "defaultValue": "https://raw.githubusercontent.com/ujjwalKSingh/sdwan-template/master"
      },
      "vmSize": {
        "type": "string",
        "metadata": {
          "description": "Size of the Virtual Machine"
        }
      },
	  "imageQualifier": {
            "defaultValue": "",
            "allowedValues": [
              "",
              "-preview"
            ],
            "type": "string",
            "metadata": {
                "description": "Specifies an additional qualifier to use for Marketplace image references. The value 'preview' is for images in staging, while the default value references production images."
            }
        }
    },
  "variables": {
    "imagePublisher": "citrix",
    "imageOffer": "[concat('netscaler-sd-wan', parameters('imageQualifier'))]",
    "imageSKU": "netscalersd-wanstandardedition",
    "OSDiskName": "[concat(parameters('vmName'),uniquestring(deployment().name),'-disk')]",
    "vmStorageAccountContainerName": "vhds",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet2Name'))]",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet3Name'))]",
    "nsgname": "[concat(parameters('vmName'),'-SecurityGroup')]",
    "apiVer": "2015-06-15",
    "publicIPAddressType": "Static",
    "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "MgmtpublicIPSetupURL": "[concat(parameters('baseUrl'),'/mgmtpublicip-',parameters('MgmtpublicIPNewOrExisting'),'.json')]",
    "VIPpublicIPSetupURL": "[concat(parameters('baseUrl'),'/vippublicip-',parameters('VIPpublicIPNewOrExisting'),'.json')]",
    "virtualNetworkSetupURL": "[concat(parameters('baseUrl'),'/vnet-',parameters('vnetNewOrExisting'),'.json')]",
    "osProfile": "[variables(concat('osProfile', 'password'))]",
    "osProfilepassword": {
      "computername": "[parameters('vmName')]",
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]"
    }
  },
  "resources": [
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[parameters('newStorageAccountName')]"
          },
          "storageAccountExistingRG": {
            "value": "[parameters('storageAccountExistingRG')]"
          }
        }
      }
    },
    {
      "name": "SettingUpMgmtPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('MgmtpublicIPSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('Location')]"
          },
          "MgmtpublicIPAddressName": {
            "value": "[parameters('MgmtpublicIPAddressName')]"
          },
          "MgmtpublicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "MgmtpublicIPNewOrExisting": {
            "value": "[parameters('MgmtpublicIPNewOrExisting')]"
          },
          "MgmtdnsPrefix": {
            "value": "[parameters('MgmtpublicIPDnsName')]"
          },
          "MgmtpublicIpRGName": {
            "value": "[parameters('MgmtpublicIPExistingRGName')]"
          }
        }
      }
    },
    {
      "name": "SettingUpVIPPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('VIPpublicIPSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('Location')]"
          },
          "VIPpublicIPAddressName": {
            "value": "[parameters('VIPpublicIPAddressName')]"
          },
          "VIPpublicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "VIPpublicIPNewOrExisting": {
            "value": "[parameters('VIPpublicIPNewOrExisting')]"
          },
          "VIPdnsPrefix": {
            "value": "[parameters('VIPpublicIPDnsName')]"
          },
          "VIPpublicIpRGName": {
            "value": "[parameters('VIPpublicIPExistingRGName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[concat(parameters('vmName'),'-SecurityGroup')]",
      "properties": {
        "securityRules": [
          {
            "name": "UDP-Rule1",
            "properties": {
              "description": "Allow UDP",
              "protocol": "Udp",
              "sourcePortRange": "4980",
              "destinationPortRange": "4980",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "UDP-Rule2",
            "properties": {
              "description": "Allow UDP",
              "protocol": "Udp",
              "sourcePortRange": "4980",
              "destinationPortRange": "4980",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Outbound"
            }
          },
          {
            "name": "TCP-Rule",
            "properties": {
              "description": "Allow TCP",
              "protocol": "Tcp",
              "sourcePortRange": "22",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "TCP-Rule-1",
            "properties": {
              "description": "Allow TCP",
              "protocol": "Tcp",
              "sourcePortRange": "443",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },
          {
            "name": "TCP-Rule-2",
            "properties": {
              "description": "Allow TCP",
              "protocol": "Tcp",
              "sourcePortRange": "80",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('Location')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          },
          "Subnet1Name": {
            "value": "[parameters('Subnet1Name')]"
          },
          "Subnet1Prefix": {
            "value": "[parameters('Subnet1Prefix')]"
          },
          "Subnet2Name": {
            "value": "[parameters('Subnet2Name')]"
          },
          "Subnet2Prefix": {
            "value": "[parameters('Subnet2Prefix')]"
          },
          "Subnet3Name": {
            "value": "[parameters('Subnet3Name')]"
          },
          "Subnet3Prefix": {
            "value": "[parameters('Subnet3Prefix')]"
          },
          "vnetExistingRGName": {
            "value": "[parameters('virtualNetworkExistingRGName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'),'-Nic0')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]",
        "[concat('Microsoft.Resources/deployments/','SettingUpMgmtPublicIP')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet1StartAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet1Ref.value]",
                "properties": {
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                  }
                }
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('MgmtpublicIPAddressName'))]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'),'-Nic1')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet2StartAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet2Ref.value]",
                "properties": {
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                  }
                }
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'),'-Nic2')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
        "[concat('Microsoft.Resources/deployments/','SettingUpVIPPublicIP')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet3StartAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2015-01-01').outputs.subnet3Ref.value]",
                "properties": {
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                  }
                }
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('VIPpublicIPAddressName'))]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "cbvw",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('Location')]",
      "plan": {
        "name": "[variables('imageSKU')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": "[variables('osProfile')]",
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/', variables('OSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic0'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic1'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic2'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]",
        "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
        "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]",
        "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic2')]"
      ]
    }
  ]
  }
